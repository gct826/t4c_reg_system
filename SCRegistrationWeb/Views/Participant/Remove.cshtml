@model SCRegistrationWeb.Models.ParticipantEntry

@{
    ViewBag.Title = "Remove Participant";
}

@if (ViewBag.Found == false)
{
    <p>@ViewBag.Message</p>
}

@if (ViewBag.Found)
{
    Html.RenderAction("Summary", "Register", new { Id = ViewBag.RegistrationID });

    using (Html.BeginForm())
    {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>RemoveParticipant</legend>

        <div id="main-wrapper">
    	    <div class="12u" id="main-content">
	    	    <div class="5grid-layout">
                    <div class="row">
                        <div class="12u">
                            <h3>Are you sure you want to remove participant:</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div class="4u">
                            <table>
                                <tr>
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.FirstName)
                                        </div>
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.FirstName, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.FirstName)
                                        </div>                                            
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="4u">
                            <table>
                                <tr>
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.LastName)
                                        </div>
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.LastName, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.LastName)
                                        </div>                                           
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="4u">
                            <table>
                                <tr>
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.ChineseName)
                                        </div>
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.ChineseName, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.ChineseName)
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="3u">
                            <table>
                                <tr class="radioselect">
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.GenderID)
                                        </div>
                                            
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.Genders.Name, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.GenderID)
                                        </div>                                                                                                                       
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="3u">
                            <table>
                                <tr class="radioselect">
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.AgeRangeID)
                                        </div>
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.AgeRanges.Name, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.AgeRangeID)
                                        </div>                                                                                                                   
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="3u">
                            <table>
                                <tr class="radioselect">
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.ServiceID)
                                        </div>
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.Services.Name, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.ServiceID)
                                        </div>                                                                                                                 
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="3u">
                            <table>
                                <tr class="radioselect">
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.RegTypeID)
                                        </div>
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.RegTypes.Name, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.RegTypeID)
                                        </div>                                                                                                             
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="3u">
                            <table>
                                <tr class="radioselect">
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.FellowshipID)
                                        </div>
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.Fellowships.Name, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.FellowshipID)
                                        </div>                                 
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="3u">
                            <table>
                                <tr class="radioselect">
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.RoomTypeID)
                                        </div>
                                        <div class="editor-field readonly">
                                            @Html.TextBoxFor(model => model.RoomTypes.Name, new { disabled = "disabled", @readonly = "readonly" })
                                            @Html.HiddenFor(model => model.RoomTypeID)
                                        </div>                                                                                  
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="3u">
                            <table>
                                <tr class="radioselect">
                                    <td>
                                        <div class="editor-label readonly">
                                            @Html.LabelFor(model => model.PartPrice)
                                        </div>
                                        <div class="editor-label large">
                                            @String.Format("{0:C}", @ViewBag.PartPrice)
                                        </div>                                                                                                         
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="3u">
                            <table>
                                <tr class="radioselect">
                                    <td>
                                        <input type="button" title="Cancel" value="Cancel" onclick="location.href='@Url.Action("Modify", "Register", new { RegUID = ViewBag.RegUID })    '" />        
                                        <input type="submit" value="Confirm" />
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>      
                </div>
            </div>
        </div>
    </fieldset>
    }
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
